{"version":3,"sources":["firebase/config.js","hooks/useFireStore.js","components/ImageGrid.js","components/Modal.js","components/Title.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","FireStore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImage","useFirestore","className","map","motion","div","layout","whileHover","opacity","key","onClick","url","img","src","alt","initial","animate","transition","delay","Modal","selectedImage","e","target","classList","contains","y","Title","dark","setDark","root","document","documentElement","style","setProperty","type","onChange","prevDark","htmlFor","icon","faSun","fontSize","color","faMoon","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","UploadForm","types","selected","files","includes","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc512881.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBfmLCZCRsSMQH3zpqnjEGPonHYQVTzPNA\",\r\n  authDomain: \"firegram-photo-gallery-fb.firebaseapp.com\",\r\n  projectId: \"firegram-photo-gallery-fb\",\r\n  storageBucket: \"firegram-photo-gallery-fb.appspot.com\",\r\n  messagingSenderId: \"264269745885\",\r\n  appId: \"1:264269745885:web:affe256e27085c0f05d534\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport { projectStorage, projectFirestore, timestamp };\r\n","import { useState, useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst FireStore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore\r\n      .collection(collection)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snap) => {\r\n        let documents = [];\r\n        snap.forEach((doc) => {\r\n          documents.push({\r\n            ...doc.data(),\r\n            id: doc.id,\r\n          });\r\n        });\r\n        setDocs(documents);\r\n      });\r\n    return () => unsub();\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n};\r\n\r\nexport default FireStore;\r\n","import React from \"react\";\r\nimport useFirestore from \"../hooks/useFireStore\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ImageGrid = ({ setSelectedImage }) => {\r\n  const { docs } = useFirestore(\"images\");\r\n  return (\r\n    <main className=\"img-grid\">\r\n      {docs &&\r\n        docs.map((doc) => (\r\n          <motion.div\r\n            layout\r\n            whileHover={{ opacity: 1 }}\r\n            className=\"img-wrap\"\r\n            key={doc.id}\r\n            onClick={() => setSelectedImage(doc.url)}\r\n          >\r\n            <motion.img\r\n              src={doc.url}\r\n              alt=\"uploaded pic\"\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              transition={{ delay: 1 }}\r\n            />\r\n          </motion.div>\r\n        ))}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst Modal = ({ selectedImage, setSelectedImage }) => {\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains(\"backdrop\")) {\r\n      setSelectedImage(null);\r\n    }\r\n  };\r\n  return (\r\n    <motion.div\r\n      className=\"backdrop\"\r\n      onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img\r\n        src={selectedImage}\r\n        alt=\"enlarged pic\"\r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMoon, faSun } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Title = () => {\n  //Settign Dark/Light Mode Toggle\n  const [dark, setDark] = useState(false);\n\n  useEffect(() => {\n    let root = document.documentElement;\n    if (dark) {\n      root.style.setProperty(\"--secondary\", \"#ebebeb\");\n      root.style.setProperty(\"--background\", \"#2e2e2e\");\n    } else {\n      root.style.setProperty(\"--secondary\", \"#4f4f4f\");\n      root.style.setProperty(\"--background\", \"#ffffff\");\n    }\n  }, [dark]);\n\n  return (\n    <header>\n      <nav>\n        <h1 className=\"title\">ImageStore</h1>\n        <div>\n          <input\n            type=\"checkbox\"\n            className=\"checkbox\"\n            id=\"chk\"\n            onChange={() => setDark((prevDark) => !prevDark)}\n          />\n          <label className=\"toggler\" htmlFor=\"chk\">\n            {\n              <FontAwesomeIcon\n                icon={faSun}\n                style={{ fontSize: \"8px\", color: \"#f39c12\" }}\n              />\n            }\n\n            {\n              <FontAwesomeIcon\n                icon={faMoon}\n                style={{ fontSize: \"8px\", color: \"#f1c40f\" }}\n              />\n            }\n            <div className=\"ball\"></div>\n          </label>\n        </div>\n      </nav>\n      <h2>Your Pictures</h2>\n      <p>Upload your pictures and we will store them for you!</p>\n    </header>\n  );\n};\n\nexport default Title;\n","import { useState, useEffect } from \"react\";\r\nimport {\r\n  projectStorage,\r\n  projectFirestore,\r\n  timestamp,\r\n} from \"../firebase/config\";\r\n\r\nconst useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storageRef = projectStorage.ref(file.name);\r\n    const collectionRef = projectFirestore.collection(\"images\");\r\n\r\n    storageRef.put(file).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n        const url = await storageRef.getDownloadURL();\r\n        const createdAt = timestamp();\r\n        collectionRef.add({ url, createdAt });\r\n        setUrl(url);\r\n      }\r\n    );\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n\r\nexport default useStorage;\r\n","import React, { useEffect } from \"react\";\r\nimport useStorage from \"../hooks/useStorage\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ProgressBar = ({ file, setFile }) => {\r\n  const { url, progress } = useStorage(file);\r\n  useEffect(() => {\r\n    if (url) {\r\n      setFile(null);\r\n    }\r\n  }, [url, setFile]);\r\n  return (\r\n    <motion.div\r\n      className=\"progress-bar\"\r\n      initial={{ width: 0 }}\r\n      animate={{ width: progress + \"%\" }}\r\n    ></motion.div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React, { useState } from \"react\";\r\nimport ProgressBar from \"../components/ProgressBar\";\r\n\r\nconst UploadForm = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  //List Of Allowed Types\r\n  const types = [\"image/png\", \"image/jpeg\"];\r\n\r\n  const changeHandler = (e) => {\r\n    let selected = e.target.files[0];\r\n\r\n    if (selected && types.includes(selected.type)) {\r\n      setFile(selected);\r\n      setError(\"\");\r\n    } else {\r\n      setFile(null);\r\n      setError(\"Please select an image file (png or jpeg)\");\r\n    }\r\n  };\r\n  return (\r\n    <form>\r\n      <label className=\"uploadFormLabel\">\r\n        <input type=\"file\" onChange={changeHandler} />\r\n        <span>+</span>\r\n      </label>\r\n      <div className=\"output\">\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {file && <div className=\"file\">{file.name}</div>}\r\n        {file && <ProgressBar file={file} setFile={setFile} />}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import React, { useState } from \"react\";\nimport ImageGrid from \"./components/ImageGrid\";\nimport Modal from \"./components/Modal\";\nimport Title from \"./components/Title\";\nimport UploadForm from \"./components/UploadForm\";\n\nfunction App() {\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImage={setSelectedImage} />\n      {selectedImage && (\n        <Modal\n          selectedImage={selectedImage}\n          setSelectedImage={setSelectedImage}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}